/* ----------------------------------------------------------------------------
Function: CBA_statemachine_fnc_create

Description:
    Creates a state machine.

Parameters:
    _list           - list of anything over which the state machine will run
                      (type needs to support setVariable) <ARRAY>
                      OR
                      code that will generate this list, called once the list
                      has been cycled through <CODE>

Returns:
    _stateMachine   - a state machine <LOCATION>

Examples:
    (begin example)
        _stateMachine = call CBA_statemachine_fnc_create;
    (end)

Author:
    BaerMitUmlaut
---------------------------------------------------------------------------- */
#include "script_component.hpp"
SCRIPT(create);
params [["_list", [], [[], {}]]];

if (isNil QGVAR(stateMachines)) then {
    GVAR(stateMachines) = [];
    GVAR(nextUniqueID) = 0;
};

private _updateCode = {};
if (typeName _list == "CODE") then {
    _updateCode = _list;
    _list = [] call _updateCode;
};

private _stateMachine = call CBA_fnc_createNamespace;
_stateMachine setVariable [QGVAR(nextUniqueStateID), 0];    // Unique ID for autogenerated state names
_stateMachine setVariable [QGVAR(tick), 0];                 // List index ticker
_stateMachine setVariable [QGVAR(states), []];              // State machine states
_stateMachine setVariable [QGVAR(list), _list];             // List state machine iterates over
_stateMachine setVariable [QGVAR(updateCode), _updateCode]; // List update code
_stateMachine setVariable [QGVAR(ID), GVAR(nextUniqueID)];  // Unique state machine ID
INC(GVAR(nextUniqueID));
GVAR(stateMachines) pushBack _stateMachine;

if (isNil QGVAR(pfh)) then {
    GVAR(pfh) = [FUNC(clockwork), 0, []] call CBA_fnc_addPerFrameHandler;
};

_stateMachine
