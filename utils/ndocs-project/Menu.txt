Format: 1.4


Title: CBA
SubTitle: Community Base Addons

Footer: Copyright (c) CBA team and contributers
Timestamp: year
#   m     - One or two digit month.  January is "1"
#   mm    - Always two digit month.  January is "01"
#   mon   - Short month word.  January is "Jan"
#   month - Long month word.  January is "January"
#   d     - One or two digit day.  1 is "1"
#   dd    - Always two digit day.  1 is "01"
#   day   - Day with letter extension.  1 is "1st"
#   yy    - Two digit year.  2006 is "06"
#   yyyy  - Four digit year.  2006 is "2006"
#   year  - Four digit year.  2006 is "2006"

# These are indexes you deleted, so Natural Docs will not add them again
# unless you remove them from this line.

Don't Index: Files


# --------------------------------------------------------------------------
# 
# Cut and paste the lines below to change the order in which your files
# appear on the menu.  Don't worry about adding or removing files, Natural
# Docs will take care of that.
# 
# You can further organize the menu by grouping the entries.  Add a
# "Group: [name] {" line to start a group, and add a "}" to end it.
# 
# You can add text and web links to the menu by adding "Text: [text]" and
# "Link: [name] ([URL])" lines, respectively.
# 
# The formatting and comments are auto-generated, so don't worry about
# neatness when editing the file.  Natural Docs will clean it up the next
# time it is run.  When working with groups, just deal with the braces and
# forget about the indentation and comments.
# 
# --------------------------------------------------------------------------


Index: Index (Everything)

Group: Project  {

   Link: Wiki  (http://dev-heaven.net/wiki/cca)
   Link: Forums  (http://dev-heaven.net/projects/cca/boards)
   Link: Issues  (http://dev-heaven.net/projects/cca/issues)
   Link: Download  (http://dev-heaven.net/projects/list_files/cca)
   }  # Group: Project

Group: Functions  {

   Function Index: Index

   Group: CBA  {

      Group: Arrays  {

         File: filter  (no auto-title, main_arrays\fnc_filter.sqf)
         File: inject  (no auto-title, main_arrays\fnc_inject.sqf)
         }  # Group: Arrays

      Group: Diagnostic  {

         File: error  (no auto-title, main_diagnostic\fnc_error.sqf)
         File: log  (no auto-title, main_diagnostic\fnc_log.sqf)
         }  # Group: Diagnostic

      Group: Events  {

         File: actionHandler  (no auto-title, main_events\fnc_actionHandler.sqf)
         File: addActionHandler  (no auto-title, main_events\fnc_addActionHandler.sqf)
         File: addActionHandlerFromConfig  (no auto-title, main_events\fnc_addActionHandlerFromConfig.sqf)
         File: addEventHandler  (no auto-title, main_events\fnc_addEventHandler.sqf)
         File: addKeyHandler  (no auto-title, main_events\fnc_addKeyHandler.sqf)
         File: addKeyHandlerFromConfig  (no auto-title, main_events\fnc_addKeyHandlerFromConfig.sqf)
         File: globalEvent  (no auto-title, main_events\fnc_globalEvent.sqf)
         File: keyHandler  (no auto-title, main_events\fnc_keyHandler.sqf)
         File: localEvent  (no auto-title, main_events\fnc_localEvent.sqf)
         File: readActionFromConfig  (no auto-title, main_events\fnc_readActionFromConfig.sqf)
         File: readKeyFromConfig  (no auto-title, main_events\fnc_readKeyFromConfig.sqf)
         File: remoteEvent  (no auto-title, main_events\fnc_remoteEvent.sqf)
         File: removeEventHandler  (no auto-title, main_events\fnc_removeEventHandler.sqf)
         }  # Group: Events

      Group: Hashes  {

         File: hashCreate  (no auto-title, main_hashes\fnc_hashCreate.sqf)
         File: hashEachPair  (no auto-title, main_hashes\fnc_hashEachPair.sqf)
         File: hashGet  (no auto-title, main_hashes\fnc_hashGet.sqf)
         File: hashHasKey  (no auto-title, main_hashes\fnc_hashHasKey.sqf)
         File: hashSet  (no auto-title, main_hashes\fnc_hashSet.sqf)
         File: isHash  (no auto-title, main_hashes\fnc_isHash.sqf)
         }  # Group: Hashes

      Group: Misc  {

         File: defaultParam  (no auto-title, main\fnc_defaultParam.sqf)
         File: getGroupIndex  (no auto-title, main\fnc_getGroupIndex.sqf)
         File: parseYAML  (no auto-title, main\fnc_parseYAML.sqf)
         File: testMain  (no auto-title, main\fnc_testMain.sqf)
         }  # Group: Misc

      Group: Network  {

         File: remoteExecute  (no auto-title, main_network\fnc_remoteExecute.sqf)
         File: remoteSay  (no auto-title, main_network\fnc_remoteSay.sqf)
         }  # Group: Network

      Group: Strings  {

         File: capitalize  (no auto-title, main_strings\fnc_capitalize.sqf)
         File: find  (no auto-title, main_strings\fnc_find.sqf)
         File: formatElapsedTime  (no auto-title, main_strings\fnc_formatElapsedTime.sqf)
         File: formatNumber  (no auto-title, main_strings\fnc_formatNumber.sqf)
         File: join  (no auto-title, main_strings\fnc_join.sqf)
         File: leftTrim  (no auto-title, main_strings\fnc_leftTrim.sqf)
         File: replace  (no auto-title, main_strings\fnc_replace.sqf)
         File: rightTrim  (no auto-title, main_strings\fnc_rightTrim.sqf)
         File: split  (no auto-title, main_strings\fnc_split.sqf)
         File: strLen  (no auto-title, main_strings\fnc_strLen.sqf)
         File: trim  (no auto-title, main_strings\fnc_trim.sqf)
         }  # Group: Strings

      }  # Group: CBA

   Group: CBA_main_network  {

      Group: Network  {

         File: cv  (no auto-title, main_network\fnc_cv.sqf)
         File: exec  (no auto-title, main_network\fnc_exec.sqf)
         File: opc  (no auto-title, main_network\fnc_opc.sqf)
         File: opd  (no auto-title, main_network\fnc_opd.sqf)
         File: sync  (no auto-title, main_network\fnc_sync.sqf)
         }  # Group: Network

      }  # Group: CBA_main_network

   }  # Group: Functions

Group: Macros  {

   Macro Index: Index
   File: script_macros_common  (no auto-title, main\script_macros_common.hpp)
   }  # Group: Macros

